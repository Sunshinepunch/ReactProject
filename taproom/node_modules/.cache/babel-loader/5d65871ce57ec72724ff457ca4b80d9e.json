{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Becket\\\\Desktop\\\\TapRoomProject\\\\taproom\\\\src\\\\components\\\\KegControl.js\";\nimport React from 'react';\nimport NewKegForm from './NewKegForm';\nimport KegList from './KegList';\nimport EditKegForm from './EditKegForm'; // import KegDetail from KegDetail;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass KegControl extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      if (this.state.selectedKeg != null) {\n        this.setState({\n          formVisibleOnPage: false,\n          selectedKeg: null\n        });\n      } else {\n        this.setState(prevState => ({\n          formVisibleOnPage: !prevState.formVisibleOnPage\n        }));\n      }\n    };\n\n    this.handleEditClick = () => {\n      this.setState({\n        editing: true\n      });\n    };\n\n    this.handleNewKegToList = newKeg => {\n      const newKegList = this.state.KegList.concat(newKeg);\n      this.setState({\n        formVisibleOnPage: false,\n        KegList: newKegList\n      });\n    };\n\n    this.handleChangingSelectedKeg = id => {\n      const selectedKeg = this.state.KegList.filter(keg => keg.id === id)[0];\n      this.setState({\n        selectedKeg: selectedKeg\n      });\n    };\n\n    this.handleEditKeg = kegToEdit => {\n      const editKegList = this.state.KegList.filter(keg => keg.id !== this.state.selectedKeg.id).concat(kegToEdit);\n      this.setState({\n        KegList: editKegList,\n        editing: false,\n        selectedKeg: null\n      });\n    };\n\n    this.state = {\n      formVisibleOnPage: false,\n      KegList: [],\n      selectedKeg: null,\n      editing: false\n    };\n  }\n\n  // handlePint = (id) => {\n  //   let selectedKeg = this.state.KegList.find(keg => keg.id === id);\n  //   selectedKeg.quantity --;\n  //   const newKegList = this.state.KegList.map((keg) => {return keg.id === id ? selectedKeg : keg});\n  //   this.setState({ KegList: newKegList});\n  // }\n  render() {\n    let currentlyVisibleState = null;\n    let buttonText = null;\n\n    if (this.state.editing) {\n      currentlyVisibleState = /*#__PURE__*/_jsxDEV(EditKegForm, {\n        keg: this.state.selectedKeg,\n        onEditKeg: this.handleEditKeg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 31\n      }, this);\n      buttonText = \"Return to Kegs\";\n    } else if (this.state.formVisibleOnPage) {\n      currentlyVisibleState = /*#__PURE__*/_jsxDEV(NewKegForm, {\n        onNewKegCreation: this.handleNewKegToList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 31\n      }, this);\n      buttonText = \"Return to Keg List\";\n    } else {\n      currentlyVisibleState = /*#__PURE__*/_jsxDEV(KegList, {\n        kegList: this.state.KegList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 31\n      }, this);\n      buttonText = \"Add New Keg\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The Kombutcha Lounge \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), currentlyVisibleState, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default KegControl;","map":{"version":3,"sources":["C:/Users/Becket/Desktop/TapRoomProject/taproom/src/components/KegControl.js"],"names":["React","NewKegForm","KegList","EditKegForm","KegControl","Component","constructor","props","handleClick","state","selectedKeg","setState","formVisibleOnPage","prevState","handleEditClick","editing","handleNewKegToList","newKeg","newKegList","concat","handleChangingSelectedKeg","id","filter","keg","handleEditKeg","kegToEdit","editKegList","render","currentlyVisibleState","buttonText"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport NewKegForm from './NewKegForm';\r\nimport KegList from './KegList';\r\nimport EditKegForm from './EditKegForm';\r\n// import KegDetail from KegDetail;\r\n\r\n\r\nclass KegControl extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      formVisibleOnPage: false,\r\n      KegList: [],\r\n      selectedKeg: null,\r\n      editing: false\r\n    };\r\n  }\r\n\r\n  handleClick = () => {\r\n    if (this.state.selectedKeg != null) {\r\n      this.setState({ formVisibleOnPage: false, selectedKeg: null});\r\n    }\r\n    else {\r\n      this.setState(prevState => ({\r\n      formVisibleOnPage: !prevState.formVisibleOnPage\r\n    }));\r\n  }\r\n}\r\n\r\nhandleEditClick = () => {\r\n  this.setState({editing: true});\r\n}\r\n\r\nhandleNewKegToList = (newKeg) => {\r\n  const newKegList = this.state.KegList.concat(newKeg);\r\n  this.setState({formVisibleOnPage: false, KegList: newKegList});\r\n}\r\n\r\nhandleChangingSelectedKeg = (id) => {\r\n  const selectedKeg = this.state.KegList.filter(keg => keg.id === id)[0];\r\n  this.setState({selectedKeg: selectedKeg});\r\n}\r\n\r\nhandleEditKeg = (kegToEdit) => {\r\n  const editKegList = this.state.KegList.filter(keg => keg.id !== this.state.selectedKeg.id).concat(kegToEdit);\r\n  this.setState({\r\n    KegList: editKegList,\r\n    editing: false,\r\n    selectedKeg: null\r\n  });\r\n}\r\n\r\n// handlePint = (id) => {\r\n//   let selectedKeg = this.state.KegList.find(keg => keg.id === id);\r\n//   selectedKeg.quantity --;\r\n//   const newKegList = this.state.KegList.map((keg) => {return keg.id === id ? selectedKeg : keg});\r\n//   this.setState({ KegList: newKegList});\r\n// }\r\n  render(){\r\n    let currentlyVisibleState = null;\r\n    let buttonText = null;\r\n    if (this.state.editing) {\r\n      currentlyVisibleState = <EditKegForm keg={this.state.selectedKeg} onEditKeg = {this.handleEditKeg}/>\r\n      buttonText = \"Return to Kegs\";\r\n    }else if (this.state.formVisibleOnPage){\r\n      currentlyVisibleState = <NewKegForm onNewKegCreation={this.handleNewKegToList}/>\r\n      buttonText = \"Return to Keg List\";\r\n    } else {\r\n      currentlyVisibleState = <KegList kegList={this.state.KegList} />\r\n      buttonText = \"Add New Keg\";\r\n    }\r\n    return(\r\n      <React.Fragment>\r\n        <h1>The Kombutcha Lounge </h1>\r\n        <hr />\r\n        {currentlyVisibleState}\r\n        <button onClick={this.handleClick}>{buttonText}</button>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default KegControl;"]},"metadata":{},"sourceType":"module"}