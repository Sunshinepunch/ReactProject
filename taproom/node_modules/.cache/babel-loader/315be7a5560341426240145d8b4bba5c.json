{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Becket\\\\Desktop\\\\TapRoomProject\\\\taproom\\\\src\\\\components\\\\KegControl.js\";\nimport React from 'react';\nimport NewKegForm from './NewKegForm';\nimport KegList from './KegList';\nimport KegDetail from \"./KegDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass KegControl extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      if (this.state.selectedKeg != null) {\n        this.setState({\n          formVisibleOnPage: false,\n          selectedKeg: null\n        });\n      } else {\n        this.setState(prevState => ({\n          formVisibleOnPage: !prevState.formVisibleOnPage\n        }));\n      }\n    };\n\n    this.handleNewKegToList = newKeg => {\n      const newKegList = this.state.KegList.concat(newKeg);\n      this.setState({\n        formVisibleOnPage: false,\n        KegList: newKegList\n      });\n    };\n\n    this.handlePint = id => {\n      let selectedKeg = this.state.KegList.find(keg => keg.id === id);\n      selectedKeg.quantity--;\n      const newKegList = this.state.KegList.map(keg => {\n        return keg.id === id ? selectedKeg : keg;\n      });\n      this.setState({\n        KegList: newKegList\n      });\n    };\n\n    this.state = {\n      formVisibleOnPage: false,\n      KegList: [],\n      selectedKeg: null\n    };\n  }\n\n  render() {\n    let currentlyVisibleState = null;\n    let buttonText = null;\n\n    if (this.state.editing) {\n      currentlyVisibleState = /*#__PURE__*/_jsxDEV(EditKegForm, {\n        keg: this.state.selectedKeg,\n        onEditKeg: this.handleEditingSeltzer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 31\n      }, this);\n      buttonText = \"Return to Seltzer List\";\n    } else if (this.state.selectedSeltzer != null) {\n      currentlyVisibleState = /*#__PURE__*/_jsxDEV(SeltzerDetail, {\n        seltzer: this.state.selectedSeltzer,\n        onClickDelete: this.handleDeletingSeltzer,\n        onClickEdit: this.handleEditClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 31\n      }, this);\n      buttonText = \"Return to Seltzer List\";\n    } else if (this.state.formVisibleOnPage) {\n      currentlyVisibleState = /*#__PURE__*/_jsxDEV(NewSeltzerForm, {\n        onNewSeltzerCreation: this.handleNewSeltzerToList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 31\n      }, this);\n      buttonText = \"Return to Seltzer List\";\n    } else {\n      currentlyVisibleState = /*#__PURE__*/_jsxDEV(SeltzerList, {\n        seltzerList: this.state.mainSeltzerList,\n        onSeltzerSelection: this.handleChangingSelectedSeltzer,\n        onClickBuy: this.handleSellPint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 31\n      }, this);\n      buttonText = \"Add New Seltzer\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [currentlyVisibleState, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default KegControl;","map":{"version":3,"sources":["C:/Users/Becket/Desktop/TapRoomProject/taproom/src/components/KegControl.js"],"names":["React","NewKegForm","KegList","KegDetail","KegControl","Component","constructor","props","handleClick","state","selectedKeg","setState","formVisibleOnPage","prevState","handleNewKegToList","newKeg","newKegList","concat","handlePint","id","find","keg","quantity","map","render","currentlyVisibleState","buttonText","editing","handleEditingSeltzer","selectedSeltzer","handleDeletingSeltzer","handleEditClick","handleNewSeltzerToList","mainSeltzerList","handleChangingSelectedSeltzer","handleSellPint"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport NewKegForm from './NewKegForm';\r\nimport KegList from './KegList';\r\nimport KegDetail from \"./KegDetail\";\r\n\r\nclass KegControl extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      formVisibleOnPage: false,\r\n      KegList: [],\r\n      selectedKeg: null\r\n    };\r\n  }\r\n\r\n  handleClick = () => {\r\n    if (this.state.selectedKeg != null) {\r\n      this.setState({ formVisibleOnPage: false, selectedKeg: null});\r\n    }\r\n    else {\r\n      this.setState(prevState => ({\r\n      formVisibleOnPage: !prevState.formVisibleOnPage\r\n    }));\r\n  }\r\n}\r\n\r\nhandleNewKegToList = (newKeg) => {\r\n  const newKegList = this.state.KegList.concat(newKeg);\r\n  this.setState({formVisibleOnPage: false, KegList: newKegList});\r\n}\r\n\r\nhandlePint = (id) => {\r\n  let selectedKeg = this.state.KegList.find(keg => keg.id === id);\r\n  selectedKeg.quantity --;\r\n  const newKegList = this.state.KegList.map((keg) => {return keg.id === id ? selectedKeg : keg});\r\n  this.setState({ KegList: newKegList});\r\n}\r\n  render(){\r\n    let currentlyVisibleState = null;\r\n    let buttonText = null;\r\n    if (this.state.editing) {\r\n      currentlyVisibleState = <EditKegForm keg={this.state.selectedKeg} onEditKeg = {this.handleEditingSeltzer}/>\r\n      buttonText = \"Return to Seltzer List\";\r\n    } else if (this.state.selectedSeltzer != null) {\r\n      currentlyVisibleState = <SeltzerDetail seltzer={this.state.selectedSeltzer} onClickDelete={this.handleDeletingSeltzer} onClickEdit = {this.handleEditClick}/>\r\n      buttonText = \"Return to Seltzer List\";\r\n    } else if (this.state.formVisibleOnPage){\r\n      currentlyVisibleState = <NewSeltzerForm onNewSeltzerCreation={this.handleNewSeltzerToList}/>\r\n      buttonText = \"Return to Seltzer List\";\r\n    } else {\r\n      currentlyVisibleState = <SeltzerList seltzerList={this.state.mainSeltzerList} onSeltzerSelection={this.handleChangingSelectedSeltzer} onClickBuy = {this.handleSellPint}/>\r\n      buttonText = \"Add New Seltzer\";\r\n    }\r\n    return(\r\n      <React.Fragment>\r\n        {currentlyVisibleState}\r\n        <button onClick={this.handleClick}>{buttonText}</button>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default KegControl;"]},"metadata":{},"sourceType":"module"}