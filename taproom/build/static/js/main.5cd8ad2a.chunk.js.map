{"version":3,"sources":["components/Header.js","components/NewKegForm.js","components/Keg.js","components/KegList.js","components/KegControl.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","NewKegForm","props","Fragment","Keg","names","brand","flavor","price","mainKegList","KegList","map","keg","index","KegControl","handleClick","setState","prevState","formVisibleOnPage","state","currentlyVisibleState","buttonText","this","onClick","React","Componenet","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kLAQeA,MANf,WACE,OACE,oD,4BCMWC,MARf,SAAoBC,GAClB,OACE,cAAC,IAAMC,SAAP,UACE,qFCkBSC,MApBf,SAAaF,GAGX,OACE,eAAC,IAAMC,SAAP,WACE,+BAAKD,EAAMG,MAAX,MAAqBH,EAAMI,SAC3B,8BAAIJ,EAAMK,OAAV,MAAqBL,EAAMM,SAC3B,2BCPAC,EAAc,CAClB,CACEJ,MAAO,sBACPC,MAAO,UACPC,OAAQ,eACRC,MAAO,MAET,CACEH,MAAO,qBACPC,MAAO,mBACPC,OAAQ,sBACRC,MAAO,OAmBIE,MAff,WACE,OACE,eAAC,IAAMP,SAAP,WACE,uBACCM,EAAYE,KAAI,SAACC,EAAKC,GAAN,OACjB,cAAC,EAAD,CAAKR,MAAOO,EAAIP,MAChBC,MAAOM,EAAIN,MACXC,OAAQK,EAAIL,OACZC,MAAOI,EAAIJ,OACNK,UCUIC,E,kDA/Bb,WAAYZ,GAAO,IAAD,8BAChB,cAAMA,IAMRa,YAAc,WACZ,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BC,mBAAoBD,EAAUC,uBAPhC,EAAKC,MAAQ,CACXD,mBAAmB,GAHL,E,0CAYlB,WACE,IAAIE,EAAwB,KACxBC,EAAa,KAQjB,OAPGC,KAAKH,MAAMD,mBACZE,EAAwB,cAAC,EAAD,IACxBC,EAAa,uBAEbD,EAAwB,cAAC,EAAD,IACxBC,EAAa,WAGb,eAAC,IAAMlB,SAAP,WACGiB,EACD,wBAAQG,QAASD,KAAKP,YAAtB,SAAoCM,W,GA3BnBG,IAAMC,YCShBC,MATf,WACE,OACE,eAAC,IAAMvB,SAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5cd8ad2a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header(){\r\n  return (\r\n    <h1>Tap Room Keg List</h1>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction NewKegForm(props){\r\n  return (\r\n    <React.Fragment>\r\n      <h2>Add a keg by filling out the information below: </h2>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default NewKegForm","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Keg(props){\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h3>{props.names} - {props.brand}</h3>\r\n      <p>{props.flavor} - {props.price}</p>\r\n      <hr/>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n\r\nKeg.propTypes = {\r\n  names: PropTypes.string.isRequired,\r\n  brand: PropTypes.string.isRequired,\r\n  price: PropTypes.number.isRequired,\r\n  flavor: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Keg;","import React from \"react\";\r\nimport Keg from \"./Keg\";\r\n\r\nconst mainKegList = [\r\n  {\r\n    names: 'Kombucha Plus Ultra',\r\n    brand: 'Kombust',\r\n    flavor: 'Mango Ginger',\r\n    price: 6.99\r\n  },\r\n  {\r\n    names: 'Kombuchaya My Lord',\r\n    brand: 'Insensitive Corp',\r\n    flavor: 'Blueberry Tangerine',\r\n    price: 7.99\r\n  }\r\n];\r\n\r\nfunction KegList(){\r\n  return(\r\n    <React.Fragment>\r\n      <hr/>\r\n      {mainKegList.map((keg, index) =>\r\n      <Keg names={keg.names}\r\n      brand={keg.brand}\r\n      flavor={keg.flavor}\r\n      price={keg.price}\r\n      key={index}/>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default KegList;","import React from 'react';\r\nimport NewKegForm from './NewKegForm';\r\nimport KegList from './KegList';\r\n\r\nclass KegControl extends React.Componenet {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      formVisibleOnPage: false\r\n    };\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState(prevState => ({\r\n      formVisibleOnPage: !prevState.formVisibleOnPage\r\n    }));\r\n  }\r\n  render(){\r\n    let currentlyVisibleState = null;\r\n    let buttonText = null;\r\n    if(this.state.formVisibleOnPage) {\r\n      currentlyVisibleState = <NewKegForm />;\r\n      buttonText = \"Return to Keg List\";\r\n    } else {\r\n      currentlyVisibleState = <KegList />;\r\n      buttonText = \"Add Keg\";\r\n    }\r\n    return(\r\n      <React.Fragment>\r\n        {currentlyVisibleState}\r\n        <button onClick={this.handleClick}>{buttonText}</button>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default KegControl;","import Header from \"./Header\";\nimport KegControl from \"./KegControl\";\nimport React from \"react\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Header />\n      <KegControl />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}